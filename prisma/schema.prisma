// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String
  password String
  acctId   String @unique @db.Uuid

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profile  Profile?
  cart     Cart?
  products Product[]
}

model Profile {
  id         Int     @id @default(autoincrement())
  firstname  String?
  lastname   String?
  phone      String?
  photo      String?
  lastLogin  String?
  isVerified String?
  acctId     String  @unique @db.Uuid

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique // relation scalar field (used in the `@relation` attribute above)
}

model Product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title        String
  slug         String
  image        String?
  color        String[]
  category     String[]
  price        String
  brand        String[]
  countInStock Int?
  rating       Int?
  desc         String
  size         String[]
  numReviews   String?
  uuid         String   @unique @db.Uuid

  customer   User @relation(fields: [customerId], references: [id])
  customerId Int // relation scalar field  (used in the `@relation` attribute above)

  carts CartProducts[]
}

model Cart {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique // relation scalar field (used in the `@relation` attribute abcart

  products CartProducts[]
}

model CartProducts {
  cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    Int // relation scalar field (used in the `@relation` attribute above)
  product   Product  @relation(fields: [productId], references: [id])
  productId Int // relation scalar field (used in the `@relation` attribute above)
  addedAt   DateTime @default(now())
  addedBy   String

  @@id([productId, cartId])
}

model Order {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title String
  desc  String
}
